<!DOCTYPE hmtl>

<html>

  <head>

    <!-- ZingChart CDN script -->
    <script src="https://cdn.zingchart.com/zingchart.min.js"></script>

    <style>
      #chart {
        height: 300px;
        width: 300px;
      }
    </style>

  </head>

  <body>

    <h1>packets</h1>

    <!-- EJS loop through packets returned from MongoDB -->
    <ul>

      <!-- inserts each packet time/protocol from MongoDB to list -->
      <% packets.forEach(packet => { %>
      <li><%= `Time: ${packet.Time.getTime()}, Protocol: ${packet.Protocol}` %></li>
      <% }); %>

    </ul>

    <!-- chart container -->
    <div id="chart"></div>

    <!-- fetches data from api/data page & renders chart from data returned -->
    <script>

      // creates variable for url we want to fetch
      const url = 'http://localhost/3000/api/data';

      // fetch call to our /api/data page
      fetch(url)

        // creates promise to work with response from /api/data
        .then(res => {

          // throws error if there is a problem fetching page
          if (!res.ok) {

            // returns error with response text of error
            throw new Error(res.statusText);

          }

          // returns data from /api/data page in json format to next promise
          return res.json();

        })

        // creates promise with returned data from previous promise
        .then(data => {

          // creates packets variable to store JSON data form /api/data
          let packets = data;

          // creates empty packetInfo array
          let packetInfo = [];

          // loops through data from packet variable
          packets.forEach(packet => {

            // pushes values from packets variable to empty packetInfo array
            packetInfo.push([Date.parse(packet.Time.getTime()), parseInt(packet.Protocol)]);
            console.log("found info  :" + [PacketInfo]);

          });

          // creates chart const with packetInfo array
          const chart = {
            type: 'bar',
            series: [
              {
                values: packetInfo
              }
            ]
          };

          // renders zingchart to the page
          zingchart.render({
            id: 'chart',
            data: chart,
            height: '100%',
            width: '100%'
          });

        })

        // catches errors in promise chain
        .catch(error => console.log('fetch error'));

    </script>

  </body>

</html>
